angular.module("app",["ngSanitize","ngRoute","app.global.constants","app.global.controllers","app.global.filters","app.global.services","app.global.services.rest","app.global.services.rest.mock","app.global.directives","app.global.translation","app.students.attestation","app.students.dashboard","app.students.lessons","app.students.reports","app.students.account","app.students.chats","app.students.employment","app.students.templates"]).config(["$routeProvider","$locationProvider","$httpProvider","parseDatesFromJsonProvider","$pooTranslationProvider","$translateProvider",(e,t,r,s,n,a)=>(e.otherwise({redirectTo:"/"}),t.html5Mode(!1),s.parse(r),n.setupTranslation(a))]).directive("children",["studentSelector",e=>({restrict:"E",replace:!0,template:"<div x-ng-if=\"students.length &gt; 1\"> <a x-ng-repeat=\"student in students track by $index\", x-ng-class=\"student == selectedStudent ? 'icon-check' : 'icon-empty'\", x-ng-click=\"select(student)\"> <small>{{ (student | personName) + ' (гр. ' + student.groupName + ')'}}</small> </a> <hr> </div>",link:t=>(t.select=r=>e.setStudent(t.selectedStudent=r),t.students=e.getStudents(),t.select(e.getStudent()))})]).provider("studentSelector",()=>{let e=()=>[];return{config:t=>e=t,$get:["$rootScope","session",(t,r)=>({student:null,students:null,getStudents:function(){let t;return null!=(t=this.students)?t:this.students=e(r.getTenant())},getStudent:function(){let e;return null!=(e=this.student)?e:this.student=_.first(this.getStudents())},setStudent:function(e){return t.$broadcast("studentChanged",this.student=e)}})]}}),angular.module("app-parent",["app"]).config(["studentSelectorProvider",e=>e.config(e=>e.parentRole.students)]).run(["session","globalRun",(e,t)=>(e.checkParentAccess(),t.run())]),angular.module("app-student",["app"]).config(["studentSelectorProvider",e=>e.config(e=>(console.log("studentSelectorProvider",e),e.studentRole.students))]).run(["session","globalRun",(e,t)=>(e.checkStudentAccess(),t.run())]),angular.module("app.students.account",["app.students.account.controllers","app.students.account.services.rest"]).config(["$routeProvider",e=>e.when("/account/settings",{templateUrl:"app/students/account/view.settings.pug",controller:"Students.AccountSettings.View"}).when("/account/certificate",{templateUrl:"app/students/account/view.certificate.pug",controller:"Students.AccountCertificate.View"})]),angular.module("app.students.account.controllers",[]).controller("Students.AccountSettings.View",["$scope","session","busyPromise","errors","accountRest","userRoles","esiaSettingsService","$liteBox","localSettings","redirect","$window",(e,t,r,s,n,a,o,i,l,d,u)=>{let c,p,m;return e.$root.pageTitle="Настройки",p=()=>r(n.getSettings(),e).then(r=>{let s,n,a,o,i;for(e.accounts=r.data.persons,e.accountsLoaded=!0,console.log("session.getTenant()",t.getTenant()),n=t.getTenant(),a=0,o=(i=e.accounts).length;a<o;a++)s=i[a],n.settings.organization.organizationId===s.orgId&&(e.person=s);return console.log("$scope.accounts",e.accounts)}),m=()=>r(o.loadEsiaSettings()).then(()=>(l.get("isEsiaAvailable",!1)||d.toLoginPage(),e.esiaOnly=o.getEsiaSettings().esiaOnly,console.log("getEsiaSettings",o.getEsiaSettings()),console.log("$scope.esiaOnly",e.esiaOnly))),e.accountsLoaded=!(c=()=>i.liteBox().open("app/students/account/dialog.add-account.pug","AccountSettings.AddAccount")),m(),p(),_.extend(e,{role:_.findWhere(a.getRoles(t.getTenant()),{selected:!0}),isEsiaAvailable:l.get("isEsiaAvailable",!1),isEsiaOnly:l.get("isEsiaOnly",!1),addNewLogin:()=>(console.log("addNewLogin"),c().then(e=>(p(),u.location.reload(),console.log("addAccount",e)))),bind:()=>o.bindEsia(),unbind:(t,s)=>i.confirmDelete("Вы действительно хотите удалить связь с учётной записью на портале гос. услуг?").then(a=>{if(a)return r(o.unbindEsiaToken(t,s),e).then(e=>(console.log("unbing response",e),m(),p(),r(n.getTenantsForEsia().then(e=>(console.log("getTenantsForEsia",e.data),l.set("tenants",e.data.tenants),u.location.reload())))),e=>i.errorBox("Произошла ошибка удаления связи с учётной записью на портале гос. услуг",e))})})}]).controller("AccountSettings.AddAccount",["$scope","liteBox","busyPromise","accountRest","errors","localSettings",(e,t,r,s,n,a)=>{let o=new Hashes.SHA256;return _.extend(e,{login:"",password:"",close:()=>t.close(null),submit(i){if(i.$setValidity("rest",!0),i.$valid)return console.log("введены",e.login,e.password),r(s.addLogin({login:e.login,password:o.b64(e.password)}),e).then(e=>(console.log("returned",e,a.get("tenants")),a.set("tenants",e.data.tenants),t.close(null)),e=>(console.log("authenticate error",e,i),n.handleRestError(e,i)))}})}]).controller("Students.AccountCertificate.View",["$scope","session","busyPromise","errors","supplementaryCertificateRest","studentSelector","userRoles","$liteBox","certificateScreenState",(e,t,r,s,n,a,o,i,l)=>{let d="/students/parent.html"===_.findWhere(o.getRoles(t.getTenant()),{selected:!0}).href,o=()=>{let t,s;return r(n.loadStudentInfo(null!=(s=a.getStudent())?s.id:void 0),e).then(r=>{if(e.studentInfo=r.data,console.log("$scope.studentInfo",e.studentInfo),e.studentInfo.certificateAllowed||e.studentInfo.certificateAvailable?e.studentInfo.certificateAvailable?e.screenState=l.available:e.studentInfo.needParentToReceiveCertificate&&!d?e.screenState=l.onlyParent:e.screenState=l.notAvailable:e.screenState=l.notAllowed,console.log("$scope.screenState"),e.studentInfo.certificateAvailable)return t()}),t=()=>{let t;return console.log("loadCertificate"),r(n.loadCertificateInfo(null!=(t=a.getStudent())?t.id:void 0),e).then(t=>(e.certificateInfo=t.data,console.log(e.certificateInfo),console.log("$scope.screenState",e.screenState)),e=>i.errorBox("Произошла ошибка загрузки информации о сертификате",e)),r(n.isFileAvailable(null!=(t=a.getStudent())?t.id:void 0),e).then(t=>e.isFileAvailable=t.data,e=>i.errorBox("Произошла ошибка загрузки информации о доступности файла",e))},_.extend(e,{certificateScreenState:l,studentId:null!=(s=a.getStudent())?s.id:void 0,templateKind:d?2:1,addCertificate(){if(console.log("addCertificate",e.studentInfo.hasIdentityDocument),e.studentInfo.hasIdentityDocument)return i.liteBox({resolve:{student:()=>a.getStudent(),studentInfo:()=>e.studentInfo,birthday:()=>e.studentInfo.birthday}}).open("app/students/account/dialog.student-add-certificate.pug","Students.AddCertificate").then(t=>{if(null!=t)return e.studentInfo.certificateAvailable=!0,e.screenState=l.available,e.certificateInfo=t});i.warningBox("Для получения сертификата у студента должен быть заполнен документ удостоверяющий личность.")}})};return o(),e.$on("studentChanged",o)}]).controller("Students.AddCertificate",["$scope","liteBox","busyPromise","errors","supplementaryCertificateRest","student","studentInfo","birthday",(e,t,r,s,n,a,o,i)=>{let l;return console.log("student",a),console.log("birthday",i),o.needParentToReceiveCertificate,l=t=>e.certificateCategories=e.allcertificateCategories.filter(e=>e.munucipalityId===t),r(n.loadMunicipalities(),e).then(t=>e.municipalities=t.data,e=>$liteBox.errorBox("Произошла ошибка загрузки списка муниципалитетов",e)),r(n.loadCertificateCategories(),e).then(t=>(e.allcertificateCategories=t.data,e.certificateCategories=[],e.categoriesEmpty=!0),e=>$liteBox.errorBox("Произошла ошибка загрузки списка категорий сертификатов",e)),_.extend(e,{municipality:"",certificateCategory:"",person:_.cloneDeep(a),birthday:i,selectOptionName:()=>e.categoriesEmpty?"Нет категорий":"Выберите категорию",close:()=>t.close(null),submit(a){if(a.$setValidity("rest",!0),a.$valid)return r(n.receiveCertificate(e.person.id,e.municipality,e.certificateCategory),e).then(r=>(console.log("result.data",r.data),console.log("$scope.person.certificate",e.person.certificate),t.close(r.data)),e=>s.handleRestError(e,a))}}),e.$watch("municipality",t=>{if(console.log("municipality watch",t),void 0!==t&&void 0!==e.allcertificateCategories)return e.certificateCategories=l(t),e.categoriesEmpty=e.certificateCategories.length<=0})}]),angular.module("app.students.account.services.rest",[]).service("accountRest",["$http",e=>({getSettings:()=>e.get("/services/security/account-settings"),addLogin:t=>e.post("/services/security/add-login",t),getTenantsForEsia:()=>e.get("/services/security/get-esia-tenants")})]).service("supplementaryCertificateRest",["$http",e=>({loadMunicipalities:()=>e.get("/services/people/supplementarycertificate/municipalities"),loadCertificateCategories:()=>e.get("/services/people/supplementarycertificate/certificatecategories"),loadCertificateInfo:t=>e.get(`/services/people/supplementarycertificate/loadCertificateInfo/${t}`),isFileAvailable:t=>e.get(`/services/people/supplementarycertificate/isfileavailable/${t}`),loadStudentInfo:t=>e.get(`/services/people/supplementarycertificate/loadStudentInfo/${t}`),receiveCertificate:(t,r,s)=>e.post(`/services/people/supplementarycertificate/receiveCertificate/${t}`,{municipalityId:r,categoryId:s})})]),angular.module("app.students.attestation",["app.students.attestation.controllers","app.students.attestation.filters","app.students.attestation.services.rest","app.students.attestation.services.rest.mock"]).config(["$routeProvider",e=>e.when("/attestation",{templateUrl:"app/students/attestation/view.attestation.pug",controller:"Students.Attestation.View"})]),angular.module("app.students.attestation.controllers",[]).controller("Students.Attestation.View",["$scope","$liteBox","studentSelector","busyPromise","attestationRest","$translate",(e,t,r,s,n,a)=>{let o;return e.$root.section="attestation",e.$root.pageTitle=a.instant("Аттестация"),(o=()=>{let o;return s(n.load(null!=(o=r.getStudent())?o.id:void 0),e).then(t=>{let r,s,n,a,o,i;for(e.terms=[],o=[],s=0,n=(a=_.extend(e,t.data).academicYears).length;s<n;s++)r=a[s],o.push((()=>{for(let t=r.terms,n=[],a=0,o=t.length;a<o;a++)i=t[a],r.isActive||(r.isActive=i.isActive),n.push(e.terms.push({id:i.id,yearNumber:r.number,termNumber:i.number,termType:r.termType,isActive:i.isActive,subjects:_.filter(e.subjects,e=>null!=e.marks[i.id])}));return s})());return o},e=>t.errorBox(a.instant("Ошибка загрузки итоговых оценок"),e))})(),e.$on("studentChanged",o)}]),angular.module("app.students.attestation.filters",[]).filter("shortTermType",["termTypes",e=>{let t={};return t[e.semester]="сем.",t[e.trimester]="трим.",e=>{let r;return null!=(r=t[e])?r:e}}]).filter("skipCourses",["termTypes",e=>t=>_.filter(t,t=>t.termType!==e.course)]),angular.module("app.students.attestation.services.rest",[]).service("attestationRest",["$http","tv4Promise",(e,t)=>({load:r=>e.get(`/services/students/${r}/attestation`).then(t({$schema:"http://json-schema.org/draft-04/schema#",type:"object",additionalProperties:!1,required:["academicYears","subjects"],properties:{academicYears:{type:"array",items:{type:"object",additionalProperties:!1,required:["id","number","termType","terms"],properties:{id:{type:"integer"},number:{type:"integer"},termType:{type:"string"},terms:{type:"array",items:{type:"object",additionalProperties:!1,required:["id","number","isActive"],properties:{id:{type:"integer"},number:{type:"integer"},isActive:{type:"boolean"}}}}}}},subjects:{type:"array",items:{type:"object",required:["name","marks","finalMark"],properties:{name:{type:"string"},marks:{type:"object"},finalMark:{type:"object",additionalProperties:!1,properties:{value:{type:"string"}}}}}}}}))})]),angular.module("app.students.attestation.services.rest.mock",[]),angular.module("app.students.chats",["app.students.chats.controllers","app.students.chats.services.rest"]).config(["$routeProvider",e=>e.when("/chats",{templateUrl:"app/students/chats/view.chats.pug",controller:"Students.Chats.View"})]),angular.module("app.students.chats.controllers",[]).controller("Students.Chats.View",["$scope","busyPromise","chatsRest","chatService","chatTypes",(e,t,r,s,n)=>(console.log("controller in"),e.$root.pageTitle="Чаты",e.communicationSettingsAreSet=!1,t(r.checkVKCommunicationSettings(),e).then(t=>(e.communicationSettingsAreSet=t.data,console.log("communicationSettingsAreSet",t,e.communicationSettingsAreSet)),e=>$liteBox.errorBox("Произошла ошибка загрузки информации о настройках коммуникационной среды",e)),t(r.getVkEduProfile(),e).then(t=>(e.vkEduProfile=t.data,console.log("vkEduProfile",t,e.vkEduProfile)),e=>$liteBox.errorBox("Произошла ошибка загрузки информации о ВК профиле",e)),t(r.loadChatsForCurrentUser(),e).then(t=>(e.chats=t.data,console.log("loadChatsForCurrentUser chats=",e.chats)),e=>$liteBox.errorBox("Произошла ошибка загрузки информации о чатах пользователя",e)),_.extend(e,{ip:"",linkVKProfile:()=>s.linkVKProfile(r,e,s),goVKMessenger:()=>(console.log("goVKMessenger"),t(r.getVkEduProfile(),e).then(e=>{let t=e.data;if(console.log("vkEduProfile",e,t),null!=t)return s.windowOpen({url:"https://web.vk.me/",name:"_blank"})},e=>$liteBox.errorBox("Произошла ошибка загрузки информации о ВК профиле",e))),unlinkVkEduProfile:()=>s.unlinkVkEduProfile(r,e),isVkEduProfileDefined:()=>null!=e.vkEduProfile&&!_.isEmpty(e.vkEduProfile.toString()),isShowChatManagementButton:()=>!1,showChatAdmins:e=>null!==e.adminName&&""!==e.adminName,getChatCssClassName(e){switch(e.chatType){case n.teacherChat:return"chat_box_teacher";case n.groupChat:return"chat_box_group";case n.parentChat:return"chat_box_parents";case n.subjectChat:return"chat_box_subject"}}}))]),angular.module("app.students.chats.services.rest",[]).service("chatsRest",["$http",e=>({getIp:()=>e.get("https://www.cloudflare.com/cdn-cgi/trace").then(e=>e.data.trim().split("\n")[2].split("=")[1]),getVkAccessData:t=>(console.log("getVkAccessData",t),e.get("/integration/vk/access-data",{params:{ip:t.ip}})),checkVKCommunicationSettings:()=>e.get("/integration/vk/checkCommunicationSettings"),getVkEduProfile:()=>e.get("/integration/vk/edu-profile"),unlinkVkEduProfile:()=>e.post("/integration/vk/edu-profile/unlink"),loadChatsForCurrentUser:()=>e.get("/integration/chatManagement/chats/current")})]),angular.module("app.students.dashboard.controllers",[]).controller("Students.Dashboard.View",["$scope","$liteBox","studentSelector","busyPromise","dashboardRest","organizationRest",(e,t,r,s,n,a)=>{let o;return e.$root.section="dashboard",e.$root.pageTitle="Главная",(o=()=>{let a;return s(n.load(null!=(a=e.student=r.getStudent())?a.id:void 0),e).then(t=>(e.bestSubjects=_.chain(t.data.subjects).filter(e=>4<=e.mark).take(10).value(),e.worstSubjects=_.chain(t.data.subjects).filter(e=>e.mark<4).reverse().take(10).value()),e=>t.errorBox("Ошибка загрузки главной страницы",e))})(),e.$on("studentChanged",o),s(a.loadLastNews(5),e).then(t=>e.news=t.data,e=>t.errorBox("Ошибка загрузки объявлений",e))}]),angular.module("app.students.dashboard",["app.students.dashboard.controllers","app.students.dashboard.services.rest","app.students.dashboard.services.rest.mock"]).config(["$routeProvider",e=>e.when("/",{templateUrl:"app/students/dashboard/view.dashboard.pug",controller:"Students.Dashboard.View"})]),angular.module("app.students.dashboard.services.rest",[]).service("dashboardRest",["$http","tv4Promise",(e,t)=>({load:r=>e.get(`/services/students/${r}/dashboard`).then(t({$schema:"http://json-schema.org/draft-04/schema#",type:"object"}))})]),angular.module("app.students.dashboard.services.rest.mock",[]),angular.module("app.students.employment.controllers",[]).controller("Students.Employment.View",["$scope","busyPromise",(e,t)=>{let r;return console.log("controller in"),e.$root.pageTitle="Трудоустройство",_.extend(e,{goEmployment:()=>(console.log("goEmployment"),r({url:"https://rabota.yanao.ru/content/%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D0%BE_%D0%BA%D0%B0%D1%80%D1%8C%D0%B5%D1%80%D1%8B",name:"_blank"}))}),r=e=>{let t,r,s,n,a,o;for(console.log("windowOpen",e),a=e.url||"",t=e.name||"",n=e.specs||"",(o=e.winChild)&&!o.closed&&o.close(),o=window.open(a,t,n),r=(e.winChild=o).opener,s=[];r&&!r.closed;)try{r.childWindows.push(o),s.push(r=r.opener)}catch(i){break}return s}}]),angular.module("app.students.employment",["app.students.employment.controllers"]).config(["$routeProvider",e=>e.when("/employment",{templateUrl:"app/students/employment/view.employment.pug",controller:"Students.Employment.View"})]),angular.module("app.students.lessons.controllers",[]).controller("Students.Lessons.View",["$scope","$liteBox","$filter","studentSelector","busyPromise","busyPromiseWithParams","lessonsRest","organizationRest","gradebookMeetingsRest","chatService","errors","$translate",(e,t,r,s,n,a,o,i,l,d,u,c)=>(e.$root.section="lessons",e.$root.pageTitle=c.instant("Занятия и оценки"),n(i.loadSystemInfo(),e).then(t=>{let r;return e.areChatsEnabled=null!=t&&null!=(r=t.data)?r.areChatsEnabled:void 0,console.log("result?.data",null!=t?t.data:void 0)},e=>t.errorBox(c.instant("Произошла ошибка загрузки информации о системе"),e)),_.extend(e,!1,{currentWeek:()=>e.startDate=moment().startOf("week"),previousWeek:()=>e.startDate=moment(e.startDate).add({week:-1}),nextWeek:()=>e.startDate=moment(e.startDate).add({week:1}),expandLesson(t){if(!e.meetingOpening)return t.expanded=!t.expanded},openMeeting(r){if(e.meetingOpening=!0,setTimeout(()=>e.meetingOpening=!1,300),console.log("openMeeting",r),r.gradebook.meetingId)return n(l.joinMeeting(r.gradebook.meetingId),e).then(e=>(console.log("openMeeting",e.data),e={url:e.data.meetingUrl,name:"_blank"},d.windowOpen(e)),e=>t.warningBox(u.getRestError(e),e))}}),e.currentWeek(),e.$watch("startDate",t=>e.endDate=moment(t).endOf("week")),e.$watch("endDate",i=()=>{let i;return n(o.load(null!=(i=s.getStudent())?i.id:void 0,e.startDate,e.endDate),e).then(s=>{let n,o,i,d,u,p,m,g;if(e.week=r("trimWeek")(s.data),e.areChatsEnabled){for(m=e.week,g=[],o=i=0,d=m.length;i<d;o=++i)n=m[o],g.push((()=>{let r,i,d=n.lessons,m=[];for(p=r=0,i=d.length;r<i;p=++r)null!=(u=d[p]).gradebook?m.push(a(l.getMeeting(u.gradebook.id),e,o,p).then(t=>{let r;return s=t.promiseResonse,r=t.param1,t=t.param2,_.isUndefined(s.data.meetingId)?_.extend(e.week[r].lessons[t].gradebook,{meetingId:null}):_.extend(e.week[r].lessons[t].gradebook,s.data)},e=>t.errorBox(c.instant("Ошибка загрузки данных."),e))):m.push(void 0);return m})());return g}},e=>t.errorBox(c.instant("Ошибка загрузки занятий"),e))}),e.$on("studentChanged",i))]).controller("Students.Timetable.View",["$scope","$liteBox","$filter","studentSelector","busyPromise","lessonsRest","$translate",(e,t,r,s,n,a,o)=>{let i;return e.$root.section="timetable",e.$root.pageTitle=o.instant("Расписание занятий"),_.extend(e,{currentWeek:()=>e.startDate=moment().startOf("week"),previousWeek:()=>e.startDate=moment(e.startDate).add({week:-1}),nextWeek:()=>e.startDate=moment(e.startDate).add({week:1})}),e.currentWeek(),e.$watch("startDate",t=>e.endDate=moment(t).add({week:1}).endOf("week")),e.$watch("endDate",i=()=>{let i;return n(a.load(null!=(i=s.getStudent())?i.id:void 0,e.startDate,e.endDate),e).then(t=>{for(let n,a=[],o,i,l=t.data,d=0,u=l.length;d<u;d++)(n=l[d]).date=moment(n.date),n.date.week()!==o?(o=n.date.week(),a.push(i=[n])):i.push(n);return e.weeks=_.chain(s).map(e=>r("trimWeek")(e)).filter(e=>!_.isEmpty(e)).value()},e=>t.errorBox(o.instant("Ошибка загрузки занятий"),e))}),e.$on("studentChanged",i)}]),angular.module("app.students.lessons.filters",[]).filter("educationTaskTypeShort",["educationTaskTypes",e=>{let t={};return t[e.lesson]="ОЗ",t[e.control]="КР",t[e.independent]="СР",t[e.laboratory]="ЛЗ",t[e.slice]="СЗ",t[e.home]="ДЗ",t[e.review]="РФ",t[e.test]="ТТ",t[e.report]="ДК",t[e.colloquium]="КЛ",e=>{let r;return null!=(r=t[e])?r:e}}]).filter("educationTaskTypeStyle",["educationTaskTypes",e=>{let t={};return t[e.lesson]=null,t[e.control]=null,t[e.independent]=null,t[e.laboratory]=null,t[e.slice]=null,t[e.home]="homework",t[e.review]=null,t[e.test]=null,t[e.report]=null,t[e.colloquium]=null,e=>{let r;return null!=(r=t[e])?r:e}}]).filter("attendance",["absenceTypes",e=>(t,r)=>{if(null!=t&&!moment().isBefore(r))switch(t.absenceType){case e.isAbsentByValidReason:return"isAbsentByValidReason";case e.isAbsentByNotValidReason:return"isAbsentByNotValidReason";case e.sickLeave:return"sickLeave";case e.isLate:return"late";default:return"attended"}return null}]).filter("trimWeek",()=>e=>{let t;return _.isArray(e)&&-1!==(t=_.findIndex(e,e=>!_.isEmpty(e.lessons)))?e.slice(t,1+_.findLastIndex(e,e=>!_.isEmpty(e.lessons))):[]}),angular.module("app.students.lessons",["app.students.lessons.controllers","app.students.lessons.filters","app.students.lessons.services.rest","app.students.lessons.services.rest.mock"]).config(["$routeProvider",e=>e.when("/lessons",{templateUrl:"app/students/lessons/view.lessons.pug",controller:"Students.Lessons.View"}).when("/timetable",{templateUrl:"app/students/lessons/view.timetable.pug",controller:"Students.Timetable.View"})]),angular.module("app.students.lessons.services.rest",[]).service("lessonsRest",["$http","tv4Promise","classroomSchema","idPersonNameSchema",(e,t,r,s)=>({load:(t,r,s)=>e.get(`/services/students/${t}/lessons/${moment(r).format("YYYY-MM-DD")}/${moment(s).format("YYYY-MM-DD")}`)})]).service("gradebookMeetingsRest",["$http",e=>({getMeeting:t=>e.get(`/integration/meetings/${t}`),joinMeeting:t=>e.post(`/integration/meetings/${t}`)})]),angular.module("app.students.lessons.services.rest.mock",[]),angular.module("app.students.reports.controllers",[]).controller("Students.PerformanceReport.View",["$scope","$liteBox","$filter","$export","busyPromise","performanceReportRest","studentSelector","session","absenceTypes","markRatings",(e,t,r,s,n,a,o,i,l,d)=>{let u,c,p;return e.$root.pageTitle="Текущая успеваемость",c=e=>t.errorBox("Произошла ошибка получения текущей успеваемости",e),_.extend(e,{report:null,allowExport:!0,export(){let t;return s.download("/services/reports/current/performance",{date:e.report.date,studentWorkFlowId:null!=(t=o.getStudent())?t.id:void 0})}}),u=e=>{switch(e){case d.two:return 2;case d.three:return 3;case d.four:return 4;case d.five:return 5;default:return 1}},p=e=>(e.absenceType===l.isAbsentByValidReason&&(e.value="уп"),e.absenceType===l.isAbsentByNotValidReason&&(e.value="нп"),e.absenceType===l.sickLeave&&(e.value="б"),""===e.value?e.value=e.marks:""!==e.marks?e.value=`${e.value},${e.marks}`:void 0),(()=>{let t;return console.log("studentSelector.getStudent() =",o.getStudent()),n(a.load(null!=(t=o.getStudent())?t.id:void 0),e).then(t=>{let r,s,n,a,i,l,d,c,m,g,h,f,y,v,b,k,S,w,x,T,P,$,C,A,R,B;for(e.report=_.extend(t.data,{date:moment(),student:o.getStudent()}),console.log("report",e.report),e.days=[],a=0,c=(S=e.report.monthsWithDays).length;a<c;a++)for(i=0,m=(w=S[a].daysWithLessons).length;i<m;i++)r=w[i],e.days.push(r);for(e.reportRows=[],C=[],l=0,g=(x=e.report.daysWithMarksForSubject).length;l<g;l++){for(A={subject:(B=x[l]).subjectName,days:[],averageMark:""},n=[],d=0,h=(T=e.days).length;d<h;d++){for(R={day:r=T[d],absenceType:null,marks:"",value:""},v=0,f=(P=B.daysWithMarks).length;v<f;v++)if(Date.parse((s=P[v]).day)===Date.parse(r)){for(_.isUndefined(s.absenceType)||(R.absenceType=s.absenceType),k=0,y=($=s.markValues).length;k<y;k++)b=$[k],R.marks=""===R.marks?u(b):`${R.marks},${u(b)}`;p(R)}n.push(R)}A.days=n,B.hasOwnProperty("averageMark")&&(A.averageMark=B.averageMark),C.push(e.reportRows.push(A))}return C},c)})()}]).controller("Students.GroupAttestation.View",["$scope","$liteBox","$filter","$export","busyPromise","groupAttestationReportRest","examinationTypes","session","studentSelector",(e,t,r,s,n,a,o,i,l)=>{let d,u;return e.$root.pageTitle="Ведомость успеваемости",u=e=>t.errorBox("Произошла ошибка получения сводной ведомости успеваемости по группе",e),d=_.reduce([o.exam,o.differentiatedTest,o.test,o.other,o.courseWork,o.professionalModule],(e,t,r)=>(e[t]=r,e),{}),_.extend(e,{report:null,export(){let n,a,o;return s.download("/services/reports/curator/group-attestation-for-student",{date:e.report.date,academicYear:r("educationYear")(e.report.year),academicPeriod:r("academicTermTitle")(e.report.termNumber,e.report.termType),department:e.report.departmentName,studentGroup:e.report.student.groupName,examinationTypes:(()=>{for(let s=e.report.examinationTypes,n=[],a=0,i=s.length;a<i;a++)o=s[a],n.push({name:r("pluralExaminationType")(o.examinationType),count:o.count});return t})(),subjects:(()=>{for(let s=e.report.subjects,n=[],o=0,i=s.length;o<i;o++)n.push({id:(a=s[o]).id,name:a.name,teacher:a.teacher,marks:_.reduce(_.keys(a.marks),(e,t)=>(e[t]={value:r("markLong")(a.marks[t].value,"-")},e),{})});return t})(),students:e.report.students,studentWorkFlowId:null!=(n=l.getStudent())?n.id:void 0})}}),(()=>{let t;return console.log("studentSelector.getStudent() =",l.getStudent()),n(a.load(null!=(t=l.getStudent())?t.id:void 0),e).then(t=>(e.allowExport=!_.any([t.data.students,t.data.subjects],_.isEmpty),e.report=_.chain(t.data.subjects).concat(_.forEach(t.data.profModules,e=>e.examinationType=o.professionalModule)).concat(_.forEach(t.data.courseWorks,e=>e.examinationType=o.courseWork)).groupBy("examinationType").sortBy((e,t)=>d[t]).reduce((e,t)=>{for(let s,n,a=r("orderBy")(t,"name"),o=0,i=a.length;o<i;o++)s=a[o],null!=n?n.count++:e.examinationTypes.push(n={examinationType:s.examinationType,count:1}),e.subjects.push(s);return e},{date:moment(),student:l.getStudent(),students:t.data.students,examinationTypes:[],subjects:[],termType:t.data.termType,termNumber:t.data.termNumber,year:t.data.year,departmentName:t.data.departmentName}).value(),console.log("after load",e.report)),u)})()}]),angular.module("app.students.reports",["app.students.reports.controllers","app.students.reports.services.rest"]).config(["$routeProvider",e=>e.when("/reports/performance",{templateUrl:"app/students/reports/performance-report.pug",controller:"Students.PerformanceReport.View"}).when("/reports/attestation",{templateUrl:"app/students/reports/group-attestation.pug",controller:"Students.GroupAttestation.View"})]),angular.module("app.students.reports.services.rest",[]).service("performanceReportRest",["$http","tv4Promise","schemaHelper","idNameSchema",(e,t,r,s)=>{let n={$schema:"http://json-schema.org/draft-04/schema#",type:"object",additionalProperties:!1,required:["monthsWithDays","daysWithMarksForSubject"],properties:{monthsWithDays:{type:"array"},daysWithMarksForSubject:{type:"array"}}};return{load:r=>(console.log("load studentWorkFlowId=",r),e.get(`/services/reports/current/performance/${r}`).then(t(n)))}}]).service("groupAttestationReportRest",["$http","tv4Promise","schemaHelper","idPersonNameSchema","idNameSchema","markRatings",(e,t,r,s,n,a)=>({load:o=>e.get(`/services/reports/curator/group-attestation-for-student/${o}`).then(t({type:"object",additionalProperties:!0,required:["students","subjects","profModules","termType","termNumber","year","departmentName"],properties:{students:{type:"array",items:s},subjects:{type:"array",items:r.union(n,{required:["examinationType","marks"],properties:{examinationType:{type:"string"},marks:{type:"object",additionalProperties:!1,patternProperties:{"^\\d+$":{type:"object",additionalProperties:!1,properties:{value:_.values(a)}}}},teacher:s}})},termType:"string",termNumber:"integer",year:"integer",departmentName:"string",profModules:{type:"array",items:r.union(n,{required:["marks"],properties:{marks:{type:"object",additionalProperties:!1,patternProperties:{"^\\d+$":{type:"object",additionalProperties:!1,properties:{value:_.values(a)}}}}}})},courseWorks:{type:"array",items:r.union(n,{required:["marks"],properties:{marks:{type:"object",additionalProperties:!1,patternProperties:{"^\\d+$":{type:"object",additionalProperties:!1,properties:{value:_.values(a)}}}},teacher:s}})}}}))})]);