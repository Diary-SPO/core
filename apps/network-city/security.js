angular.module("app",["ngRoute","app.global.filters","app.global.services","app.global.services.rest","app.global.services.rest.mock","app.global.directives","app.global.translation","app.security.login","app.security.templates","pascalprecht.translate"]).config(["$routeProvider","$locationProvider","$translateProvider","$pooTranslationProvider",(e,t,s,r)=>(e.otherwise({redirectTo:"/login"}),t.html5Mode(!1),console.log("security module"),r.setupTranslation(s))]),angular.module("app.security.login.controllers",[]).controller("Authentication",["$scope","session","busyPromise","errors","$liteBox","loginRest","supportRest","$window","esiaSettingsService","localSettings","organizationRest","$translate",(e,t,s,r,o,i,a,l,n,g,p,u)=>{let d;return e.$root.pageTitle="Вход",s(a.getVersion(),e).then(t=>e.version=t.data),s(p.loadSystemInfo(),e).then(t=>{let s;if(e.systemTitle=null!=t&&null!=(s=t.data)?s.title:void 0,e.$root.systemTitle=e.systemTitle,console.log("$scope.$root.defaultLanguage",e.$root.defaultLanguage),!e.$root.defaultLanguage)return e.$root.defaultLanguage=null!=t&&null!=(s=t.data)?s.defaultLanguage:void 0,console.log("$scope.$root.defaultLanguage",e.$root.defaultLanguage),u.use(e.$root.defaultLanguage)},e=>o.errorBox("Произошла ошибка загрузки информации о системе",e)),d=new Hashes.SHA256,s(n.loadEsiaSettings()).then(()=>(g.set("isEsiaAvailable",n.getEsiaSettings().isAvailable),e.isEsiaAvailable=n.getEsiaSettings().isAvailable)),_.extend(e,{credentials:{login:"",password:"",isRemember:!1},loginWithEsia:()=>n.redirectToLoginGateway(n.getEsiaSettings().loginUrl),authenticate(o){if(o.$setValidity("rest",!0),o.$valid)return s(i.login({login:e.credentials.login,password:d.b64(e.credentials.password),isRemember:e.credentials.isRemember}),e).then(e=>t.redirectFromLoginPage(e.data),e=>r.handleRestError(e,o))}})}]).controller("GetTenants",["$scope","session","busyPromise","loginRest",(e,t,s,r)=>s(r.getTenantsForEsia().then(e=>t.redirectFromLoginPage(e.data)))]).controller("ForgotPassword",["$scope","busyPromise","errors","loginRest","$liteBox","organizationRest",(e,t,s,r,o,i)=>(e.$root.pageTitle="Восстановление пароля",t(i.loadSystemInfo(),e).then(t=>e.systemTitle=null!=t&&null!=(t=t.data)?t.title:void 0,e=>o.errorBox("Произошла ошибка загрузки информации о системе",e)),_.extend(e,{params:{email:"",isMessageSent:!1},submit(o){if(o.$setValidity("rest",!0),o.$valid)return t(r.forgotPassword(e.params.email),e).then(()=>e.params.isMessageSent=!0,e=>s.handleRestError(e,o))}}))]).controller("ResetPassword",["$scope","$routeParams","session","busyPromise","errors","loginRest","$liteBox","organizationRest",(e,t,s,r,o,i,a,l)=>{let n,g;return e.$root.pageTitle="Изменение пароля",r(l.loadSystemInfo(),e).then(t=>e.systemTitle=null!=t&&null!=(t=t.data)?t.title:void 0,e=>a.errorBox("Произошла ошибка загрузки информации о системе",e)),n=new Hashes.SHA256,g=t.securityKey,r(i.validateForgotPassword(g),e).then(t=>e.tenants=t.data,()=>e.tenants=[]),_.extend(e,{params:{password:"",confirmPassword:""},submit(t){if(t.$setValidity("rest",!0),t.$valid)return r(i.resetPassword(g,n.b64(e.params.password)),e).then(e=>s.redirectFromLoginPage(e.data),e=>o.handleRestError(e,t))}})}]),angular.module("app.security.login.directives",[]).directive("appear",()=>(e,t)=>setTimeout(()=>t.addClass("appear"),500)).directive("equals",()=>({restrict:"A",require:"ngModel",scope:{equals:"="},link(e,t,s,r){let o=(e,t)=>r.$setValidity("equals",_.isEmpty(e)||_.isEmpty(t)||e===t);return e.$watch(()=>r.$modelValue,t=>o(t,e.equals)),e.$watch("equals",e=>o(r.$modelValue,e))}})).directive("formAutofillFix",()=>(e,t,s)=>{if(t.prop("method","POST"),s.ngSubmit)return setTimeout(()=>t.unbind("submit").submit(r=>(r.preventDefault(),t.find("input, textarea, select").trigger("input").trigger("change").trigger("keydown"),e.$apply(s.ngSubmit))),0)}),angular.module("app.security.login",["app.security.login.directives","app.security.login.controllers","app.security.login.services.rest","app.security.login.services.rest.mock","pascalprecht.translate"]).config(["$routeProvider",e=>e.when("/login",{templateUrl:"app/security/login/view.authentication.pug",controller:"Authentication"}).when("/forgot",{templateUrl:"app/security/login/view.forgot-password.pug",controller:"ForgotPassword"}).when("/reset/:securityKey",{templateUrl:"app/security/login/view.reset-password.pug",controller:"ResetPassword"}).when("/notfound",{templateUrl:"app/security/login/view.not-found.pug"}).when("/error",{templateUrl:"app/security/login/view.esia-error.pug"}).when("/tenants",{template:"",controller:"GetTenants"}).when("/esia/crosslogin",{template:"",controller:["$window","esiaSettingsService","busyPromise",(e,t,s)=>{s(t.loadEsiaSettings()).then(()=>t.redirectToLoginGateway(t.getEsiaSettings().loginUrl))}]})]),angular.module("app.security.login.services.rest",[]).service("loginRest",["$http",e=>({login:t=>e.post("/services/security/login",t),forgotPassword:t=>e.post("/services/security/forgot-password",{email:t}),validateForgotPassword:t=>e.get(`/services/security/forgot-password/${t}`),resetPassword:(t,s)=>e.put(`/services/security/reset-password/${t}`,{password:s}),getTenantsForEsia:()=>e.get("/services/security/get-esia-tenants")})]),angular.module("app.security.login.services.rest.mock",[]);